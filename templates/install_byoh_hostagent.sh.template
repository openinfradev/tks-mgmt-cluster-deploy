#!/bin/bash
set -e

## TODO
# insecure registry

BYOH_HOSTAGENT_BINARY_BASE_URL=http://${GITEA_NODE_IP}:${GITEA_NODE_PORT}/api/packages/${GIT_SVC_USERNAME}/generic/byoh_hostagent
BYOH_HOSTAGENT_CHECKSUM=${HOSTAGENT_CHECKSUM}
IMGPKG_BINARY_BASE_URL=http://${GITEA_NODE_IP}:${GITEA_NODE_PORT}/api/packages/${GIT_SVC_USERNAME}/generic/imgpkg
IMGPKG_CHECKSUM=${IMGPKG_CHECKSUM}
BOOTSTRAP_KUBECONFIG="${BOOTSTRAP_KUBECONFIG}"

check_if_supported_os() {
        OS_ID=$(grep ^ID= /etc/os-release  | awk -F'=' '{print $2}' | tr -d '"')
        OS_VERSION_ID=$(grep ^VERSION_ID= /etc/os-release  | awk -F'=' '{print $2}' | tr -d '"')

        case $OS_ID in
                "rocky" | "centos" | "rhel")
                        if [[ ${OS_VERSION_ID:0:1} == "8" ]]; then
                                true
                        else
                                false
                        fi
                        ;;
                "ubuntu")
                        if [[ $OS_VERSION_ID == "20.04" ]]; then
                                true
                        else
                                false
                        fi
                        ;;
                *)
                        false
                        ;;
        esac
}

download_byoh_agent() {
	curl -L $BYOH_HOSTAGENT_BINARY_BASE_URL/${BYOH_TKS_VERSION}/byoh-hostagent-linux-amd64 -o byoh-hostagent
	echo "$BYOH_HOSTAGENT_CHECKSUM byoh-hostagent" | sha1sum --check
	curl -L $IMGPKG_BINARY_BASE_URL/${BYOH_TKS_VERSION}/imgpkg -o imgpkg
	echo "$IMGPKG_CHECKSUM imgpkg" | sha1sum --check
}

prepare_rocky_byoh_node() {
	sudo dnf install -y socat iptables-ebtables conntrack-tools ethtool iproute-tc
}

prepare_ubuntu_byoh_node() {
	sudo apt-get install -y socat ebtables ethtool conntrack
}

prepare_byoh_node() {
	sudo systemctl stop byoh-hostagent 2>&1 >/dev/null || true
	sudo systemctl disable byoh-hostagent 2>&1 >/dev/null || true

	sudo rm -rf /root/.byoh
	sudo rm -f /etc/kubernetes/bootstrap-kubeconfig.conf
	sudo rm -f /var/log/byoh-hostagent*.log
	sudo rm -f /usr/local/bin/byoh-hostagent
	sudo rm -f /etc/systemd/system/byoh-hostagent.service

	sudo sed -i "/127.0.0.1 $(hostname)/d" /etc/hosts
	echo "127.0.0.1 $(hostname)" | sudo tee -a /etc/hosts
	sudo mkdir -p /etc/kubernetes
	echo $BOOTSTRAP_KUBECONFIG | base64 -d | sudo tee /etc/kubernetes/bootstrap-kubeconfig.conf

	case $OS_ID in
		"rocky" | "centos" | "rhel")
			prepare_rocky_byoh_node
			;;

		"ubuntu" )
			prepare_ubuntu_byoh_node
			;;
	esac

	sudo mkdir /etc/containerd || true
	cat << EOF | sudo tee /etc/containerd/config.toml
version = 2

[plugins]
  [plugins."io.containerd.grpc.v1.cri"]
    sandbox_image = "${TARGET_REGISTRY}/pause:3.9"
    [plugins."io.containerd.grpc.v1.cri".registry]
      config_path = "/etc/containerd/certs.d"
EOF
	REGISTRY_DIR="/etc/containerd/certs.d/${TARGET_REGISTRY}"
	sudo mkdir -p $REGISTRY_DIR || true
	cat <<EOF | sudo tee "${REGISTRY_DIR}/hosts.toml"
[host."http://${TARGET_REGISTRY}"]
EOF
}

run_byoh_agent() {
	sudo cp byoh-hostagent imgpkg /usr/local/bin/
	sudo chmod +x /usr/local/bin/byoh-hostagent /usr/local/bin/imgpkg

	cat << EOF | sudo tee /etc/systemd/system/byoh-hostagent.service
[Unit]
Description=byoh-hostagent: The BYOH Host Agent
Documentation=https://github.com/vmware-tanzu/cluster-api-provider-bringyourownhost/blob/main/docs/byoh_agent.md
Wants=kubelet.target
After=kubelet.target

[Service]
ExecStart=/usr/local/bin/byoh-hostagent \\
          --bootstrap-kubeconfig /etc/kubernetes/bootstrap-kubeconfig.conf \\
          ${BYOH_AGENT_OPTS} \\
          --label role=${BYOH_ROLE}

Restart=always
StartLimitInterval=0
RestartSec=10
LimitNOFILE=65536
User=root
Group=root
StandardOutput=append:/var/log/byoh-hostagent.log
StandardError=append:/var/log/byoh-hostagent-error.log

[Install]
WantedBy=multi-user.target
EOF

	sudo systemctl daemon-reload

	sudo systemctl enable byoh-hostagent.service
	sudo systemctl start byoh-hostagent.service
	sudo systemctl status byoh-hostagent.service
}

function usage {
        echo -e "\nUsage: $0 --role NODE_ROLE [--skip-download] [--verbose]\n"
	echo -e " - NODE_ROLE: control-plane, tks or worker"
        exit 1
}

# We use "$@" instead of $* to preserve argument-boundary information
ARGS=$(getopt -o 'r:svh' --long 'role:,skip-download,verbose,help' -- "$@") || usage
eval "set -- $ARGS"

while true; do
	case $1 in
		(-h|--help)
			usage;;
		(-s|--skip-download)
			SKIP_BYOH_HOSTAGENT_DOWNLOAD="true"
			shift 1;;
		(-v|--verbose)
			BYOH_AGENT_OPTS="-v 20" # for debugging
			shift 1;;
		(-r|--role)
			BYOH_ROLE=$2
			shift 2;;
		(--)  shift; break;;
		(*)   exit 1;;
	esac
done

if [ -z "$BYOH_ROLE" ]; then
	echo "Error: '--role' option is mandatory. Use the '-h' option for help."
	exit 1
fi

set +e
check_if_supported_os
if [[ $? != 0 ]]; then
	echo "This OS is not supported."
	exit 1
fi
set -e

if [[ $SKIP_BYOH_HOSTAGENT_DOWNLOAD != "true" ]]; then
	download_byoh_agent
fi
prepare_byoh_node
run_byoh_agent
